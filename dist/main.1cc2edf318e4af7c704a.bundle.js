(()=>{"use strict";var e={169:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([e.id,"*{padding:0;margin:0;box-sizing:border-box}body{width:100%}.image-slider-frame{display:flex;align-items:center;justify-content:space-around;position:relative;height:400px;width:600px;border:1px solid #a6a6a6;border-radius:12px;margin:2rem auto;user-select:none}.image-slider-frame .image-container{height:75%;width:80%;border-radius:12px;overflow:hidden}.image-slider-frame .image-container img.slider-img{width:100%}.image-slider-frame .left-arrow-div,.image-slider-frame .right-arrow-div{width:3rem;height:3rem;cursor:pointer}.image-slider-frame .left-arrow-div svg,.image-slider-frame .right-arrow-div svg{pointer-events:none}.image-slider-frame .nav-dot-container{display:flex;align-items:center;justify-content:center;gap:1rem;position:absolute;height:10%;width:50%;bottom:0}.image-slider-frame .nav-dot-container .nav-dot{height:1rem;width:1rem;border:1px solid #a6a6a6;border-radius:50%;cursor:pointer}.image-slider-frame .nav-dot-container .nav-dot.filled{background-color:#a6a6a6}.flex-center{display:flex;align-items:center;justify-content:center}\n","",{version:3,sources:["webpack://./src/main.scss"],names:[],mappings:"AAAA,EACI,SAAU,CACV,QAAS,CACT,qBAAsB,CACzB,KAGG,UAAW,CACd,oBAGG,YAAa,CACb,kBAAmB,CACnB,4BAA6B,CAC7B,iBAAkB,CAClB,YAAa,CACb,WAAY,CACZ,wBAAoC,CACpC,kBAAmB,CACnB,gBAAiB,CACjB,gBAAiB,CAVrB,qCAaQ,UAAW,CACX,SAAU,CAEV,kBAAmB,CACnB,eAAgB,CAjBxB,oDAoBY,UAAW,CApBvB,yEAyBQ,UAAW,CACX,WAAY,CACZ,cAAe,CA3BvB,iFA8BY,mBAAoB,CA9BhC,uCAmCQ,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,QAAS,CACT,iBAAkB,CAClB,UAAW,CACX,SAAU,CAEV,QAAS,CA3CjB,gDA8CY,WAAY,CACZ,UAAW,CACX,wBAAoC,CACpC,iBAAkB,CAClB,cAAe,CAlD3B,uDAqDgB,wBAAoC,CACvC,aAOT,YAAa,CACb,kBAAmB,CACnB,sBAAuB",sourcesContent:["* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    width: 100%;\n}\n\n.image-slider-frame {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    position: relative;\n    height: 400px;\n    width: 600px;\n    border: 1px solid rgb(166, 166, 166);\n    border-radius: 12px;\n    margin: 2rem auto;\n    user-select: none;\n\n    .image-container {\n        height: 75%;\n        width: 80%;\n        // border: 1px solid blue;\n        border-radius: 12px;\n        overflow: hidden;\n\n        img.slider-img {\n            width: 100%;\n        }\n    }\n\n    .left-arrow-div, .right-arrow-div {\n        width: 3rem;\n        height: 3rem;\n        cursor: pointer;\n\n        svg {\n            pointer-events: none;\n        }\n    }\n\n    .nav-dot-container {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 1rem;\n        position: absolute;\n        height: 10%;\n        width: 50%;\n        // border: 1px solid purple;\n        bottom: 0;\n\n        .nav-dot {\n            height: 1rem;\n            width: 1rem;\n            border: 1px solid rgb(166, 166, 166);\n            border-radius: 50%;\n            cursor: pointer;\n\n            &.filled {\n                background-color: rgb(166, 166, 166);\n            }\n\n        }\n    }\n}\n\n.flex-center {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"],sourceRoot:""}]);const s=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],s=0;s<e.length;s++){var c=e[s],d=r.base?c[0]+r.base:c[0],l=i[d]||0,u="".concat(d," ").concat(l);i[d]=l+1;var p=t(u),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(A);else{var f=o(A,r);r.byIndex=s,n.splice(s,0,{identifier:u,updater:f,references:1})}a.push(u)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=t(i[a]);n[s].references--}for(var c=r(e,o),d=0;d<i.length;d++){var l=t(i[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),i=t(569),a=t.n(i),s=t(565),c=t.n(s),d=t(216),l=t.n(d),u=t(589),p=t.n(u),A=t(169),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),n()(A.Z,f),A.Z&&A.Z.locals&&A.Z.locals;const m=[t.p+"ea5a1987e534b26801aaea8f3e6ee193.jpg",t.p+"33c6094612a643060800c0a3a41e35f0.jpg",t.p+"1533c67183c764ddad4f2f46a11f7eb7.jpg",t.p+"02a74ad559c148b5417f4a1fa5f5182a.jpg"],g=m.length;console.log(g);let h=0;const v=document.querySelector("body");!function(){const e=document.createElement("div");e.classList.add("image-slider-frame");const n=document.createElement("div");n.classList.add("left-arrow-div","flex-center"),n.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-left"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg>';const t=document.createElement("div");t.classList.add("image-container");const r=document.createElement("img");r.classList.add("slider-img"),t.appendChild(r);const o=document.createElement("div");o.classList.add("right-arrow-div","flex-center"),o.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-right"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg>';const i=document.createElement("div");i.classList.add("nav-dot-container"),e.appendChild(n),e.appendChild(t),e.appendChild(o),e.appendChild(i),v.appendChild(e),b(),function(e){const n=document.querySelector(".nav-dot-container");n.innerHTML="",e.forEach((t=>{const r=document.createElement("div");r.classList.add("nav-dot"),r.setAttribute("data-index",`${e.indexOf(t)}`),parseInt(r.dataset.index,10)===h&&r.classList.add("filled"),n.appendChild(r)}))}(m)}(),setInterval(B,6e3),document.querySelector(".left-arrow-div").addEventListener("click",(()=>{h<=0||(h-=1,b(),y(),console.log(h))})),document.querySelector(".right-arrow-div").addEventListener("click",(()=>{B()}));const C=document.querySelectorAll(".nav-dot");function b(){document.querySelector(".slider-img").setAttribute("src",`${m[h]}`)}function y(){C.forEach((e=>{e.classList.remove("filled"),parseInt(e.dataset.index,10)===h&&e.classList.add("filled")}))}function B(){h>=g-1||(h+=1,b(),y(),console.log(h))}C.forEach((e=>{e.addEventListener("click",(e=>{!function(e){h=parseInt(e.target.dataset.index),C.forEach((e=>{e.classList.remove("filled"),parseInt(e.dataset.index,10)===h&&e.classList.add("filled")})),b()}(e)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,